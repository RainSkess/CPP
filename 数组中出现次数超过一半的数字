https://www.nowcoder.com/practice/e8a1b01a2df14cb2b228b30ee6a92163?tpId=13&&tqId=11181&rp=1&ru=/activity/oj&qru=/ta/coding-interviews/question-ranking

class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param numbers int整型vector 
     * @return int整型
     */
    int MoreThanHalfNum_Solution(vector<int>& numbers) {
        //出现次数大于数组长度的一半，那么就是众数。
        //众数会在数组中间的位置
        //所以先排序，然后取中间的数，再验证一下就行了。
        int length = numbers.size();
        sort(numbers.begin(), numbers.end());
        int num = numbers[length / 2];
        int k = 0;
        for (auto e : numbers)
        {
            if (e == num)
            {
                ++k;
            }
        }
        if (k > length / 2)
        {
            return num;
        }
        return 0;
    }
};
